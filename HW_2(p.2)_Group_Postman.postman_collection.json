{
	"info": {
		"_postman_id": "bfc7320d-f058-4b83-8e37-1e560355e949",
		"name": "HW_2(p.2)_Group_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 4. Отправить запрос.",
							"// 5. Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 6. Спарсить response body в json.",
							"let jsonDate = pm.response.json()",
							"",
							"// 7. Спарсить request.",
							"let req = request.data",
							"",
							"// 8. Проверить, что json response имеет параметр start_qa_salary",
							"",
							"pm.test(\"Start_qa_salary_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"start_qa_salary\");",
							"});",
							"",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months",
							"",
							"pm.test(\"qa_salary_after_6_months_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"qa_salary_after_6_months\");",
							"});",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months",
							"pm.test(\"qa_salary_after_12_months_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"qa_salary_after_12_months\");",
							"});",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year",
							"pm.test(\"qa_salary_after_1.5_year_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"qa_salary_after_1.5_year\");",
							"});",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years",
							"pm.test(\"qa_salary_after_3.5_years_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"qa_salary_after_3.5_years\");",
							"});",
							"",
							"// 13. Проверить, что json response имеет параметр person",
							"pm.test(\"person_check\", function () {",
							"",
							"    pm.expect(pm.response.json()).to.have.property(\"person\");",
							"});",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)",
							"",
							"let start_qa_salary_response = jsonDate.start_qa_salary",
							"let salary_request = +req.salary",
							"",
							"pm.test(\"Salary_check\", function () {",
							"",
							"    pm.expect(start_qa_salary_response).to.eql(salary_request);",
							"});",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)",
							"let qa_salary_after_6_months_response = jsonDate.qa_salary_after_6_months",
							"let salary_request_1 = +req.salary * 2",
							"",
							"pm.test(\"Salary_check_1\", function () {",
							"",
							"    pm.expect(qa_salary_after_6_months_response).to.eql(salary_request_1);",
							"});",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)",
							"let qa_salary_after_12_months_response = jsonDate.qa_salary_after_12_months",
							"let salary_request_2 = +req.salary*2.7",
							"",
							"pm.test(\"Salary_check_2\", function () {",
							"    ",
							"    pm.expect(qa_salary_after_12_months_response).to.eql(salary_request_2);",
							"});",
							"",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)",
							"let qa_salary_after_1_5_year_response = jsonDate['qa_salary_after_1.5_year']",
							"let salary_request_3 = +req.salary*3.3",
							"",
							"pm.test(\"Salary_check_3\", function () {",
							"    ",
							"    pm.expect(qa_salary_after_1_5_year_response).to.eql(salary_request_3);",
							"});",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)",
							"let qa_salary_after_3_5_years_response = jsonDate['qa_salary_after_3.5_years']",
							"let salary_request_4 = +req.salary*3.8",
							"",
							"pm.test(\"Salary_check_4\", function () {",
							"    ",
							"    pm.expect(qa_salary_after_3_5_years_response).to.eql(salary_request_4);",
							"});",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)",
							"let person_1 = jsonDate.person.u_name[1]",
							"let salary_request_5 = +req.salary",
							"",
							"pm.test(\"Salary_check_5\", function () {",
							"    ",
							"    pm.expect(person_1).to.eql(salary_request_5);",
							"});",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)",
							"",
							"let u_age_response = jsonDate.person.u_age",
							"let age_request = +req.age",
							"pm.test(\"Age_check_5\", function () {",
							"    ",
							"    pm.expect(u_age_response ).to.eql(age_request);",
							"});",
							"",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)",
							"",
							"let u_salary_5_years_response = jsonDate.person.u_salary_5_years",
							"let salary_request_6 = req.salary*4.2",
							"",
							"pm.test(\"Salary_check_6\", function () {",
							"    ",
							"    pm.expect( u_salary_5_years_response).to.eql(salary_request_6);",
							"});",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.",
							"var user = jsonDate.person",
							"for (var prop in user) {",
							"  console.log(prop + \": \" + user[prop]);",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "750\n",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}